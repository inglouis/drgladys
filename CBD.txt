///////////////////////////////////////////////////////////////////////////////////////

								---------------------------
								// CAMBIOS BASE DE DATOS //
								---------------------------

* SEGUIMIENTO DE LOS CAMBIOS HECHOS EN LA BASE DE DATOS PARA CONSERVAR LA CONSISTENCIA
* EN EL SISTEMA

- NOTAS
- CODIGO

///////////////////////////////////////////////////////////////////////////////////////

1)-------------------------------------------------------------------------------------
SE HICIERON CAMBIOS EN LA ESTRUCTURA DE LOS USUARIOS
-------------------------------------------------------------------------------------
CREATE TABLE miscelaneos.usuarios
(
  id_usuario bigserial NOT NULL,
  usuario character varying(100) NOT NULL DEFAULT ''::bpchar,
  cookie character varying(100) NOT NULL DEFAULT ''::bpchar,
  rol character varying(100) NOT NULL DEFAULT 'PLACEHOLDER'::bpchar,
  controlador_cambios boolean NOT NULL DEFAULT false,
  notificar_usuario bigint NOT NULL DEFAULT 0,
  status character varying(1) NOT NULL DEFAULT 'A'::bpchar,
  notificacion_reportes jsonb NOT NULL DEFAULT '[]'::jsonb,
  notificacion_recipes jsonb NOT NULL DEFAULT '[]'::jsonb,
  CONSTRAINT pk_id_usuario PRIMARY KEY (id_usuario)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE miscelaneos.usuarios
  OWNER TO postgres;

- REGENERAR TABLA
- RECARGAR DATOS 
		GLADYS DOCTOR 99c5bc82
		ANDREA ADMINISTRADOR 7bdc719f

2)-------------------------------------------------------------------------------------
SE HICIERON CAMBIOS EN LA ESTRUCTURA DE LOS USUARIOS
---------------------------------------------------------------------------------------
TENGO QUE CAMBIAR QUE LAS LLAVES FORANEAS DE PRESENTACIONES Y TRATAMIENTOS HAGAN CASCADE
EN BORRAR

3)-------------------------------------------------------------------------------------
CREAR NUEVA COLUMNA EN REPORTES [REFERENCIAS]
---------------------------------------------------------------------------------------

4)-------------------------------------------------------------------------------------
CREAR TABLA REFERENCIAS - MEDICOS_REFERENCIADOS
---------------------------------------------------------------------------------------

CREATE TABLE basicas.referencias
(
  id_referencia bigserial NOT NULL,
  nombre character varying(100) NOT NULL DEFAULT ''::bpchar,
  descripcion character varying(600) NOT NULL DEFAULT ''::bpchar,
  status character varying(1) NOT NULL DEFAULT 'A'::bpchar,
  CONSTRAINT pk_id_referencia PRIMARY KEY (id_referencia)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE basicas.referencias
  OWNER TO postgres;


CREATE TABLE basicas.medicos_referidos
(
  id_referido bigserial NOT NULL,
  nombre character varying(100) NOT NULL DEFAULT ''::bpchar,
  status character varying(1) NOT NULL DEFAULT 'A'::bpchar,
  CONSTRAINT pk_id_medico_referido PRIMARY KEY (id_referido)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE basicas.medicos_referidos
  OWNER TO postgres;

5)-------------------------------------------------------------------------------------
EL TRIGGER QUE CREA EL RENGLON DE RECIPES TRAS LA INSERSION DE UNA HISTORIA NO ESTA GENERADO
--------------------------------------------------------------------------------------- 
  CREATE TRIGGER historias_reportes_nuevo_renglon
  AFTER INSERT
  ON principales.historias
  FOR EACH ROW
  EXECUTE PROCEDURE ppal.historias_reportes_nuevo_renglon();

5)-------------------------------------------------------------------------------------
AÃ‘ADIR CONSTRAIN EN AL ELIMINACION DE HISTORIA RESPECTO A TABLA REPORTES
--------------------------------------------------------------------------------------- 
  CREATE TABLE principales.reportes
(
  id_reporte bigserial NOT NULL,
  id_historia bigserial NOT NULL,
  constancias jsonb NOT NULL DEFAULT '[]'::jsonb,
  generales jsonb DEFAULT '[]'::jsonb,
  informes jsonb NOT NULL DEFAULT '[]'::jsonb,
  presupuestos jsonb NOT NULL DEFAULT '[]'::jsonb,
  reposos jsonb NOT NULL DEFAULT '[]'::jsonb,
  referencias jsonb NOT NULL DEFAULT '[]'::jsonb,
  CONSTRAINT pk_id_reportes PRIMARY KEY (id_reporte),
  CONSTRAINT fk_id_historia_historias_reportes FOREIGN KEY (id_historia)
      REFERENCES principales.historias (id_historia) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE CASCADE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE principales.reportes
  OWNER TO postgres;
